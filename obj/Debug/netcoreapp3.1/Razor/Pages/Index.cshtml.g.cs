#pragma checksum "C:\sources\VisionneusePDF\VisionneusePDF\Pages\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "dccce4c6eb559c5aa3bd805beaeafb5b767e37f3"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(VisionneusePDF.Pages.Pages_Index), @"mvc.1.0.razor-page", @"/Pages/Index.cshtml")]
namespace VisionneusePDF.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\sources\VisionneusePDF\VisionneusePDF\Pages\_ViewImports.cshtml"
using VisionneusePDF;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"dccce4c6eb559c5aa3bd805beaeafb5b767e37f3", @"/Pages/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"05c0f29fde916971f12026efcfef8391a7e26d0c", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Index : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "C:\sources\VisionneusePDF\VisionneusePDF\Pages\Index.cshtml"
  
    ViewData["Title"] = "Formulaire de demande d'aide de dernier recours";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<!DOCTYPE html>\r\n<html lang=\"fr\">\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dccce4c6eb559c5aa3bd805beaeafb5b767e37f33254", async() => {
                WriteLiteral(@"
    <meta charset=""UTF-8"">
    <title>ViewData[""Title""]</title>
    <script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js""></script>
    <script src=""https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"" integrity=""sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo"" crossorigin=""anonymous""></script>
    <script src=""https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js"" integrity=""sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6"" crossorigin=""anonymous""></script>
    <base href=""/"" />
    <script src=""pdf.cac.js""></script>
    <script src=""pdf_viewer.cac.js""></script>
    <script src=""visionneusePdf.cac.js""></script>
    <link rel=""stylesheet"" href=""https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css"" integrity=""sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh"" crossorigin=""anonymous"">
    <link rel=""stylesheet"" href=""pdf_viewer.cac.css"">
    <link rel=""");
                WriteLiteral("stylesheet\" href=\"visionneusePdf.cac.css\">\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dccce4c6eb559c5aa3bd805beaeafb5b767e37f35364", async() => {
                WriteLiteral(@"
    <div id=""chargementEnCours"">
        <div class=""spinner-border text-center"" role=""status""></div>
        <div>Chargement en cours...</div>
    </div>

    <div class=""conteneur-principal"">
        <div class=""mx-auto p-3 conteneur-pdf"" style=""display:none"">
            <div class=""section-enregistrement"">
                <div class=""d-flex"">
                    <div class=""icone"">
                        <img src=""ico-information.cac.svg"" alt=""Message d'information"">
                    </div>
                    <div class=""message-enregistrement"">
                        <div>Vous pouvez enregistrer votre formulaire en tout temps.</div>
                        <div>Un lien vous permettant de compléter votre formulaire vous sera transmis par courriel.</div>
                    </div>
                    <button class=""btn btn-primaire ml-auto d-none d-md-block"" onclick=""afficherModalEnregistrementFormulaire(this);"">
                        <span>Enregister ma demande</span>
         ");
                WriteLiteral(@"           </button>

                </div>
                <button class=""btn btn-primaire d-md-none mt-3"" onclick=""afficherModalEnregistrementFormulaire(this);"">
                    <span>Enregister ma demande</span>
                </button>
            </div>

            <div id=""pdfTarget"">
            </div>

            <div class=""section-soumission"">
                <div class=""message-soumission"">
                    <span>Une fois le formulaire complété, cliquez soumettre. (Texte final à définir)</span>
                </div>
                <button id=""btnSoumettre"" class=""btn btn-primaire"" onclick=""soumettreFormulaire(this);"">
                    <span>Soumettre ma demande</span>
                </button>
            </div>
        </div>
    </div>

    <div id=""modalEnregistrerFormulaire"" class=""fenetre-message modal"" data-backdrop=""static"" tabindex=""-1"" role=""dialog"">
        <div class=""modal-dialog modal-lg"" role=""document"">
            <div class=""modal-content"">
");
                WriteLiteral(@"                <div class=""modal-header d-flex align-items-center"">
                    <h1 class=""modal-title"">Enregistrer pour plus tard?</h1>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Fermer"">
                    </button>
                </div>
                <div class=""modal-body"">
                    <div class="" texte-explicatif-champs-obligatoires d-flex justify-content-end"" aria-hidden=""true""><span class=""icone-champ-requis"" aria-hidden=""true"">*</span><span>indique une réponse obligatoire.</span></div>
                    <div class=""row"">
                        <div class=""col-12 form-group"">
                            <label for=""adresseCourrielEnregistrement"">Saisir l'adresse courriel où le lien vous permettant de compléter le formulaire sera envoyée</label>
                            <span class=""icone-champ-requis"" aria-hidden=""true"">*</span>
                            <input id=""adresseCourrielEnregistrement"" required class=""form-");
                WriteLiteral(@"control"" type=""email"" />
                            <span id=""erreurCourriel"" class=""text-danger"" style=""display:none"">L'adresse courriel est obligatoire et doit avoir un format valide.</span>
                        </div>
                        <div class=""col-12"">
                            <label for=""motPasse"">Saisir un mot de passe qui vous permettra de récupérer votre formulaire</label>
                            <span class=""info-attendue"">(5 caractères minimum)</span>
                            <span class=""icone-champ-requis"" aria-hidden=""true"">*</span>
                            <input id=""motPasse"" class=""form-control"" required type=""text"" />
                            <span id=""erreurMotPasse"" class=""text-danger"" style=""display:none"">Le mot de passe est obligatoire et doit avoir au moins 5 caractères.</span>
                        </div>
                    </div>
                </div>
                <div class=""modal-footer"">
                    <button type=""button"" class");
                WriteLiteral(@"=""btn btn-secondaire mr-3"" data-dismiss=""modal"">Annuler</button>
                    <button type=""button"" class=""btn btn-primaire m-0"" onclick=""enregistrerFormulaire(this);"">
                        <span>Enregistrer</span>
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script>
        /* ============ DÉBUT - Définition des paramètres ==============*/
        var executionLocale = true; //ATTENTION mettre false une fois gradué
        var urlPdf = executionLocale?'pdfs/test.pdf':'");
#nullable restore
#line 103 "C:\sources\VisionneusePDF\VisionneusePDF\Pages\Index.cshtml"
                                                 Write(Model.ConfigDocumentCourant.UrlPdf);

#line default
#line hidden
#nullable disable
                WriteLiteral("\';\r\n        var urlEnregistrementForm = executionLocale?\'AFDR@NOFORM\':\'");
#nullable restore
#line 104 "C:\sources\VisionneusePDF\VisionneusePDF\Pages\Index.cshtml"
                                                              Write(Model.ConfigDocumentCourant.UrlEnregistrementForm);

#line default
#line hidden
#nullable disable
                WriteLiteral("\';\r\n        var urlSoumissionForm =  executionLocale?\'AFDR@NOFORM\':\'");
#nullable restore
#line 105 "C:\sources\VisionneusePDF\VisionneusePDF\Pages\Index.cshtml"
                                                           Write(Model.ConfigDocumentCourant.UrlSoumissionForm);

#line default
#line hidden
#nullable disable
                WriteLiteral("\';\r\n        var urlTelechargementForm = executionLocale?\'AFDR@NOFORM\':\'");
#nullable restore
#line 106 "C:\sources\VisionneusePDF\VisionneusePDF\Pages\Index.cshtml"
                                                              Write(Model.ConfigDocumentCourant.UrlTelechargementForm);

#line default
#line hidden
#nullable disable
                WriteLiteral("\';\r\n        var urlPageSuccesSoumission = executionLocale?\'confirmation.html\':\'");
#nullable restore
#line 107 "C:\sources\VisionneusePDF\VisionneusePDF\Pages\Index.cshtml"
                                                                      Write(Model.ConfigDocumentCourant.UrlConfirmation);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';
        var cheminPdfWorker = 'pdf.worker.cac.js';

        /* ============== FIN - Définition des paramètres ==============*/


        window.onload = function () {

            pdfjsLib.GlobalWorkerOptions.workerSrc = cheminPdfWorker;

            var container = document.getElementById('pdfTarget');

            /*Initialiser certaines valeurs*/
            var values = {
                //'Raison3': true,
            };

            var loadingTask = pdfjsLib.getDocument(urlPdf);
            loadingTask.promise.then(function (doc) {

                var promises = []
                for (var i = 1; i <= doc.numPages; i++) {
                    var promise = doc.getPage(i).then(function (pdfPage) {

                        pdfjsViewer.FormFunctionality.setPostCreationTweak(function (fieldType, elementId, element) {
                            element.title = elementId.alternativeText;
                        });

                        return pdfjsViewer.FormFunctionality.r");
                WriteLiteral(@"ender(1094, null, pdfPage, container, values, { hideForms: false });
                    });
                    promises.push(promise);
                }
                Promise.all(promises).then(function () {
                    executerTraitementApresChargementPdf(true);
                });
            })
                .catch(function (error) {
                    alert(""banane"");
                    executerTraitementApresChargementPdf(false);
                });
        };

        /**
         * Exécute tout le traitement requis une fois que le fichier PDF a été chargé et est affiché à l'écran.
         * ");
                WriteLiteral(@"@param succes booléen indiquant si le chargement s'est complété avec succès ou non.
         */
        function executerTraitementApresChargementPdf(succes) {
            terminerChargementEnCours();
        };

        /** Retire tous les éléments visuels liés au chargement en cours. */
        function terminerChargementEnCours() {
            $(""#chargementEnCours"").fadeOut().hide();
            $("".conteneur-pdf"").fadeIn();
        };

        /**
         * Enregistrement du formulaire.
         * ");
                WriteLiteral(@"@param bouton objet bouton à l'origine de l'enregistrement.
         */
        function enregistrerFormulaire(bouton) {

            // Valider le courriel
            if (validerFormEnregistrement()) {
                ajouterSpinnerElement(bouton);

                if (executionLocale) {
                    //Simuler retour post
                    setTimeout(function () {
                        //TODO message confirmation courriel envoyé
                        console.log(""Url post enregistrement -> "" + obtenirUrlPostEnregistrementFormulaire());
                        $(""#modalEnregistrerFormulaire"").modal(""hide"");
                        afficherMessageConfirmationEnregistrement();
                        retirerSpinnerElement(bouton);
                    }, 2000);
                } else {
                    $.post(obtenirUrlPostEnregistrementFormulaire(), pdfjsViewer.FormFunctionality.getFormValues())
                        .done(function (retour) {
                            af");
                WriteLiteral(@"ficherMessageConfirmationEnregistrement();
                            $(""#modalEnregistrerFormulaire"").modal(""hide"");
                        })
                        .fail(function () {
                            //TODO message erreur
                            alert(""error"");
                        })
                        .always(function () {
                            retirerSpinnerElement(bouton);
                        });
                }

                $(""#erreurCourriel"").hide();
                $(""#erreurMotPasse"").hide();
            }
        };

        /**
         * Obtient l'url requise au post pour enregistrement du formulaire.
         * */
        function obtenirUrlPostEnregistrementFormulaire() {
            return ""{0}?email={1}&pass={2}"".format(urlEnregistrementForm, $(""#adresseCourrielEnregistrement"").val(), $(""#motPasse"").val());
        };

        /**
         * Valide le formulaire d'enregistrement. Affiche les erreurs le cas échéant.
       ");
                WriteLiteral("  * ");
                WriteLiteral(@"@returns booléen indiquant si le formulaire est valide.
         * */
        function validerFormEnregistrement() {
            var erreur = false;

            if (!estCourrielValide($(""#adresseCourrielEnregistrement"").val())) {
                erreur = true;
                $(""#erreurCourriel"").show();
            } else {
                $(""#erreurCourriel"").hide();
            }

            if (!estNombreCaracteresSuperieurA($(""#motPasse"").val(), 4)) {
                erreur = true;
                $(""#erreurMotPasse"").show();
            } else {
                $(""#erreurMotPasse"").hide();
            }

            return !erreur;
        };

        /**
         * Affiche la fenêtre modale permettant de saisir le courriel où envoyer le lien afin de poursuivre la saisie du formulaire et procéder et exécuter la demande d'envoi de courriel.
         */
        function afficherModalEnregistrementFormulaire() {
            var fenetreModale = $(""#modalEnregistrerFormulaire"");
");
                WriteLiteral(@"            fenetreModale.find(""#adresseCourrielEnregistrement"").val("""");
            $(""#erreurCourriel"").hide();
            fenetreModale.modal(""show"");

            conserverFocusElement(fenetreModale.get(0));
        };

        /**
         * Soumission du formulaire.
         * ");
                WriteLiteral(@"@param bouton objet bouton à l'origine de l'enregistrement.
         */
        function soumettreFormulaire(bouton) {

            ajouterSpinnerElement(bouton);

            if (executionLocale) {
                //Simuler retour post
                setTimeout(function () {
                    var retour = ""asdfasdfdsafsdafd343243242"";
                    window.location = window.location = urlPageSuccesSoumission + ""?data="" + retour;
                }, 2000);
            } else {
                $.post(urlSoumissionForm, pdfjsViewer.FormFunctionality.getFormValues())
                    .done(function (retour) {
                        window.location = urlPageSuccesSoumission + ""?data="" + retour;
                    })
                    .fail(function () {
                        //TODO message erreur
                        alert(""error"");
                    });
            }
        };


        function estNombreCaracteresSuperieurA(champ, nbCaracteres) {
            retur");
                WriteLiteral("n champ!=null && champ.length > nbCaracteres;\r\n        };\r\n\r\n    </script>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<ConfigVisionneuse.DonneesVisionneuse> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<ConfigVisionneuse.DonneesVisionneuse> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<ConfigVisionneuse.DonneesVisionneuse>)PageContext?.ViewData;
        public ConfigVisionneuse.DonneesVisionneuse Model => ViewData.Model;
    }
}
#pragma warning restore 1591
